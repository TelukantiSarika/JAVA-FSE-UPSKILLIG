//1. Hello World Program 
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
    }
}

//2. Simple Calculator 
import java.util.Scanner;

public class SimpleCalculator {
    public static void main(String[] args) {
        // Use try-with-resources for automatic resource management
        try (Scanner scanner = new Scanner(System.in)) {

            // Prompt the user to enter two numbers
            System.out.print("Enter the first number: ");
            double num1 = scanner.nextDouble();

            System.out.print("Enter the second number: ");
            double num2 = scanner.nextDouble();

            // Display operation choices
            System.out.println("Choose the operation:");
            System.out.println("1. Addition (+)");
            System.out.println("2. Subtraction (-)");
            System.out.println("3. Multiplication (*)");
            System.out.println("4. Division (/)");

            System.out.print("Enter the number corresponding to the operation (1/2/3/4): ");
            int choice = scanner.nextInt();

            // Using rule switch (switch expression with arrow labels)
            String result = switch (choice) {
                case 1 -> "Result: " + num1 + " + " + num2 + " = " + (num1 + num2);
                case 2 -> "Result: " + num1 + " - " + num2 + " = " + (num1 - num2);
                case 3 -> "Result: " + num1 + " * " + num2 + " = " + (num1 * num2);
                case 4 -> {
                    if (num2 != 0) {
                        yield "Result: " + num1 + " / " + num2 + " = " + (num1 / num2);
                    } else {
                        yield "Error: Cannot divide by zero.";
                    }
                }
                default -> "Invalid operation choice.";
            };

            System.out.println(result);

        } // Scanner is automatically closed here
    }
}


//3. Even or Odd Checker
import java.util.Scanner;

public class EvenOddChecker {
    public static void main(String[] args) {
        // Use try-with-resources for automatic resource management
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for an integer
            System.out.print("Enter an integer: ");
            int number = scanner.nextInt();

            // Use the modulus operator to check divisibility by 2
            if (number % 2 == 0) {
                System.out.println(number + " is even.");
            } else {
                System.out.println(number + " is odd.");
            }
        }
    }
}


//4. Leap Year Checker
import java.util.Scanner;

public class LeapYearChecker {
    public static void main(String[] args) {
        // Use try-with-resources for automatic resource management
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user to enter a year
            System.out.print("Enter a year: ");
            int year = scanner.nextInt();

            // Apply leap year logic
            boolean isLeap = false;
            if (year % 4 == 0) {
                if (year % 100 != 0) {
                    isLeap = true;
                } else if (year % 400 == 0) {
                    isLeap = true;
                }
            }

            // Display the result
            if (isLeap) {
                System.out.println(year + " is a leap year.");
            } else {
                System.out.println(year + " is not a leap year.");
            }
        }
    }
}


//5. Multiplication Table
import java.util.Scanner;

public class MultiplicationTable {
    public static void main(String[] args) {
        // Use try-with-resources for automatic resource management
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for a number
            System.out.print("Enter a number: ");
            int number = scanner.nextInt();

            // Use a for loop to print the multiplication table up to 10
            System.out.println("Multiplication table for " + number + ":");
            for (int i = 1; i <= 10; i++) {
                int result = number * i;
                System.out.println(number + " x " + i + " = " + result);
            }
        }
    }
}


//6. Data Type Demonstration
public class DataTypeDemo {
    public static void main(String[] args) {
        // Declare and assign values to variables of different primitive types
        int myInt = 25;
        float myFloat = 3.14f;
        double myDouble = 123.456;
        char myChar = 'A';
        boolean myBoolean = true;

        // Display the values of each variable
        System.out.println("int value: " + myInt);
        System.out.println("float value: " + myFloat);
        System.out.println("double value: " + myDouble);
        System.out.println("char value: " + myChar);
        System.out.println("boolean value: " + myBoolean);
    }
}


//7. Type Casting Example
import java.util.Scanner;

public class TypeCastingExample {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user to enter a double value
            System.out.print("Enter a decimal (double) value: ");
            double userDouble = scanner.nextDouble();

            // Cast the double to int
            int castedInt = (int) userDouble;
            System.out.println("After casting to int: " + castedInt);

            // Prompt the user to enter an integer value
            System.out.print("Enter an integer value: ");
            int userInt = scanner.nextInt();

            // Cast the int to double
            double castedDouble = userInt; // Implicit casting
            System.out.println("After casting to double: " + castedDouble);
        }
    }
}


//8. Operator Precedence
public class OperatorPrecedenceDemo {
    public static void main(String[] args) {
        // Example 1
        int result1 = 10 + 5 * 2;
        System.out.println("10 + 5 * 2 = " + result1);
        System.out.println("Explanation: Multiplication (*) has higher precedence than addition (+), so 5 * 2 is evaluated first (10), then added to 10 for a result of 20.");

        // Example 2
        int result2 = (10 + 5) * 2;
        System.out.println("(10 + 5) * 2 = " + result2);
        System.out.println("Explanation: Parentheses () have the highest precedence, so 10 + 5 is evaluated first (15), then multiplied by 2 for a result of 30.");

        // Example 3
        //int result3 = 20 / 2 + 3 * 4 - 1;
      //  System.out.println("20 / 2 + 3 * 4 - 1 = " + result3);
      //  System.out.println("Explanation: Division (/) and multiplication (*) are evaluated left to right before addition (+) and subtraction (-):\n"
             //   + "20 / 2 = 10\n"
              //  + "3 * 4 = 12\n"
              //  + "So, 10 + 12 - 1 = 21.");

        // Example 4
        int result4 = 10 + 5 * 2 - 6 / 3;
        System.out.println("10 + 5 * 2 - 6 / 3 = " + result4);
       // System.out.println("Explanation: Multiplication (*) and division (/) are evaluated before addition (+) and subtraction (-):\n"
             //   + "5 * 2 = 10\n"
               // + "6 / 3 = 2\n"
              //  + "So, 10 + 10 - 2 = 18.");
    }
}


//9. Grade Calculator 
import java.util.Scanner;

public class GradeCalculator {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for marks out of 100
            System.out.print("Enter your marks (out of 100): ");
            int marks = scanner.nextInt();

            // Use if-else statements to assign grades
            char grade;
            if (marks >= 90 && marks <= 100) {
                grade = 'A';
            } else if (marks >= 80 && marks < 90) {
                grade = 'B';
            } else if (marks >= 70 && marks < 80) {
                grade = 'C';
            } else if (marks >= 60 && marks < 70) {
                grade = 'D';
            } else if (marks >= 0 && marks < 60) {
                grade = 'F';
            } else {
                System.out.println("Invalid marks entered. Please enter a value between 0 and 100.");
                return;
            }

            // Display the assigned grade
            System.out.println("Your grade is: " + grade);
        }
    }
}


//10. Number Guessing Game 
import java.util.Random;
import java.util.Scanner;

public class NumberGuessingGame {
    public static void main(String[] args) {
        // Create Random and Scanner objects using try-with-resources for Scanner
        Random random = new Random();
        try (Scanner scanner = new Scanner(System.in)) {
            // Generate a random number between 1 and 100
            int targetNumber = random.nextInt(100) + 1;
            int guess = 0;
            int attempts = 0;

            System.out.println("Welcome to the Number Guessing Game!");
            System.out.println("I have selected a number between 1 and 100. Try to guess it!");

            // Loop until the user guesses the correct number
            while (guess != targetNumber) {
                System.out.print("Enter your guess: ");
                guess = scanner.nextInt();
                attempts++;

                if (guess < targetNumber) {
                    System.out.println("Too low! Try again.");
                } else if (guess > targetNumber) {
                    System.out.println("Too high! Try again.");
                } else {
                    System.out.println("Congratulations! You guessed the number in " + attempts + " attempts.");
                }
            }
        }
    }
}


//11. Factorial Calculator 
import java.util.Scanner;

public class FactorialCalculator {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for a non-negative integer
            System.out.print("Enter a non-negative integer: ");
            int number = scanner.nextInt();

            // Validate input
            if (number < 0) {
                System.out.println("Invalid input! Please enter a non-negative integer.");
                return;
            }

            // Calculate factorial using a for loop
            long factorial = 1;
            for (int i = 1; i <= number; i++) {
                factorial *= i;
            }

            // Display the result
            System.out.println("Factorial of " + number + " is: " + factorial);
        }
    }
}


//12. Method Overloading
public class MethodOverloadingDemo {

    // Method to add two integers
    public static int add(int a, int b) {
        return a + b;
    }

    // Method to add two doubles
    public static double add(double a, double b) {
        return a + b;
    }

    // Method to add three integers
    public static int add(int a, int b, int c) {
        return a + b + c;
    }

    public static void main(String[] args) {
        // Call each overloaded method and display the results
        int sum1 = add(5, 10);
        double sum2 = add(3.5, 2.8);
        int sum3 = add(1, 2, 3);

        System.out.println("Sum of two integers (5 + 10): " + sum1);
        System.out.println("Sum of two doubles (3.5 + 2.8): " + sum2);
        System.out.println("Sum of three integers (1 + 2 + 3): " + sum3);
    }
}


//13. Recursive Fibonacci
import java.util.Scanner;

public class RecursiveFibonacci {
    // Recursive method to calculate the nth Fibonacci number
    public static int fibonacci(int n) {
        if (n == 0 || n == 1) {
            return n;
        } else {
            return fibonacci(n - 1) + fibonacci(n - 2);
        }
    }

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for a positive integer n
            System.out.print("Enter a positive integer n: ");
            int n = scanner.nextInt();

            if (n < 0) {
                System.out.println("Please enter a non-negative integer.");
            } else {
                int result = fibonacci(n);
                System.out.println("The " + n + "th Fibonacci number is: " + result);
            }
        }
    }
}


//14. Array Sum and Average
import java.util.Scanner;

public class ArraySumAndAverage {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user to enter the number of elements
            System.out.print("Enter the number of elements: ");
            int n = scanner.nextInt();

            // Create an array to store the elements
            int[] numbers = new int[n];

            // Read the elements into the array
            System.out.println("Enter " + n + " numbers:");
            for (int i = 0; i < n; i++) {
                numbers[i] = scanner.nextInt();
            }

            // Calculate the sum
            int sum = 0;
            for (int num : numbers) {
                sum += num;
            }

            // Calculate the average
            double average = (n > 0) ? (double) sum / n : 0;

            // Display the sum and average
            System.out.println("Sum of array elements: " + sum);
            System.out.println("Average of array elements: " + average);
        }
    }
}


//15. String Reversal 
import java.util.Scanner;

public class StringReversal {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for a string
            System.out.print("Enter a string: ");
            String input = scanner.nextLine();

            // Method 1: Using StringBuilder
            String reversed1 = new StringBuilder(input).reverse().toString();
            System.out.println("Reversed string (using StringBuilder): " + reversed1);

            // Method 2: Using a loop
            String reversed2 = "";
            for (int i = input.length() - 1; i >= 0; i--) {
                reversed2 += input.charAt(i);
            }
            System.out.println("Reversed string (using loop): " + reversed2);
        }
    }
}


//16. Palindrome Checker 
import java.util.Scanner;

public class PalindromeChecker {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Prompt the user for a string
            System.out.print("Enter a string: ");
            String input = scanner.nextLine();

            // Remove non-alphanumeric characters and convert to lowercase
            String cleaned = input.replaceAll("[^A-Za-z0-9]", "").toLowerCase();

            // Reverse the cleaned string
            String reversed = new StringBuilder(cleaned).reverse().toString();

            // Check if the string is a palindrome
            if (cleaned.equals(reversed)) {
                System.out.println("The string is a palindrome.");
            } else {
                System.out.println("The string is not a palindrome.");
            }
        }
    }
}


//17. Class and Object Creation
// Car.java
class Car {
    // Attributes
    String make;
    String model;
    int year;

    // Constructor
    Car(String make, String model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }

    // Method to display car details
    void displayDetails() {
        System.out.println("Car Details:");
        System.out.println("Make : " + make);
        System.out.println("Model: " + model);
        System.out.println("Year : " + year);
        System.out.println();
    }
}

// Main class to test Car objects
public class ClassAndObjectDemo {
    public static void main(String[] args) {
        // Create objects of the Car class
        Car car1 = new Car("Toyota", "Camry", 2022);
        Car car2 = new Car("Honda", "Civic", 2020);

        // Call the displayDetails() method for each object
        car1.displayDetails();
        car2.displayDetails();
    }
}


//18. Inheritance Example 
// Base class
class Animal {
    // Method to be overridden
    void makeSound() {
        System.out.println("Some generic animal sound");
    }
}

// Subclass
class Dog extends Animal {
    // Override makeSound() method
    @Override
    void makeSound() {
        System.out.println("Bark");
    }
}

// Main class to test inheritance
public class InheritanceExample {
    public static void main(String[] args) {
        // Instantiate Animal and Dog
        Animal genericAnimal = new Animal();
        Dog dog = new Dog();

        // Call makeSound() on both
        System.out.print("Animal: ");
        genericAnimal.makeSound();

        System.out.print("Dog: ");
        dog.makeSound();
    }
}


//19. Interface Implementation 
// Define the interface
interface Playable {
    void play();
}

// Implement the interface in the Guitar class
class Guitar implements Playable {
    @Override
    public void play() {
        System.out.println("Strumming the guitar!");
    }
}

// Implement the interface in the Piano class
class Piano implements Playable {
    @Override
    public void play() {
        System.out.println("Playing the piano!");
    }
}

// Main class to test the implementations
public class InterfaceDemo {
    public static void main(String[] args) {
        // Instantiate the classes
        Playable myGuitar = new Guitar();
        Playable myPiano = new Piano();

        // Call the play() method for each
        myGuitar.play();
        myPiano.play();
    }
}


//20. Try-Catch Example 
import java.util.Scanner;
public class TryCatchExample {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        try {
            System.out.print("Enter numerator: ");
            int a = sc.nextInt();
            System.out.print("Enter denominator: ");
            int b = sc.nextInt();
            System.out.println("Result: " + (a / b));
        } catch (ArithmeticException e) {
            System.out.println("Cannot divide by zero.");
        }
    }
}
